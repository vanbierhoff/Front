import {template} from './template.js'const templates = templateclass SwitchPage {    constructor(menu,templates,menuParent) {        debugger        this.menu = menu        this.menuParent = menuParent        this.templates = templates        this.offset = null        this.activeTemplate = 0    // активный шаблон(показанный на экране в данный момент)        // показываем первый шаблон при загрузке страницы        this.initPage(this.activeTemplate)       // инициализируем навигацию по пунктам меню        this.initNavigation()    }    /**     * Метод проверяет, находился пункт меню за пределами экрана     * @param el - проверяемый элемент     * @returns {boolean} если элемент видим на экране полностью возвращает true     *     */    minusOffset(el){        // Ширина экрана        let windowWidth = window.innerWidth;        //ширина элемента        let elWidth = el.offsetWidth;        // координаты элемента на экране        let elOffset = el.offsetLeft;        // если total > 0 элемент полностью на экране        let total = windowWidth -(elWidth+elOffset);        if (total > 0) {            this.menuParent.style.marginLeft = 0        }        else{            this.menuParent.style.marginLeft = total+`px`        }    }    // инициализация первого экрана и показ первой страницы    /**     *     * @param page {HTML} - шаблон страницы, которую отрисует метод     */    initPage(page){        let asans = document.querySelector('.choose-asans__shadow')        asans.insertAdjacentHTML('afterend',this.templates[page])        this.menu[0].classList.add('choose-asans__go-to-asans_active')        this.menu[0].children[0].classList.toggle('choose-asans__go-to-asans_active-color')    }    // инициализация навигации по страницам    initNavigation(){        this.menu.forEach((el,index)=>{            el.addEventListener('click',(event)=>{            el.addEventListener('click',this.toPage(event,index))            })        })    }    /**     *     * @param e  {event} - событие клика     * @param nPage {number} - номер страницы, на которую будет переход     */    async toPage(e,nPage){        //удаляем текущий узел        let deleteChild = document.querySelector('.wrapper__video');        deleteChild.remove()        this.menu[this.activeTemplate].classList.toggle('choose-asans__go-to-asans_active')        this.menu[this.activeTemplate].children[0].classList.toggle('choose-asans__go-to-asans_active-color')        // показываем информацию с новой вкладки        let asans = document.querySelector('.choose-asans__shadow')        asans.insertAdjacentHTML('afterend',this.templates[nPage])        // устанавливаем модификатор класса active - для активного пункта меню        // указываем активный шаблон        this.activeTemplate = nPage         this.minusOffset(this.menu[nPage])        this.menu[nPage].classList.toggle('choose-asans__go-to-asans_active')        this.menu[nPage].children[0].classList.toggle('choose-asans__go-to-asans_active-color')    }}let menu = document.querySelectorAll('.choose-asans__go-to-asans');let menuParent = document.querySelector('.choose_asans__navigation')menu = new SwitchPage(menu,templates,menuParent);document.addEventListener("load", e=>{    menu = new SwitchPage(menu,templates,menuParent);});